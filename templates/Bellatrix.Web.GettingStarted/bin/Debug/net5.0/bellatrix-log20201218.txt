Start Test AngularTests.Angular2Test
Start Test AngularTests.ShouldGreetUsingBinding
Type 'Julie' into control (Angular Model = 
function getNg1Hooks(selector, injectorPlease) {
    function tryEl(el) {
        try {
            if (!injectorPlease && angular.getTestability) {
                var $$testability = angular.getTestability(el);
                if ($$testability) {
                    return {$$testability: $$testability};
                }
            } else {
                var $injector = angular.element(el).injector();
                if ($injector) {
                    return {$injector: $injector};
                }
            }
        } catch(err) {} 
    }
    function trySelector(selector) {
        var els = document.querySelectorAll(selector);
        for (var i = 0; i < els.length; i++) {
            var elHooks = tryEl(els[i]);
            if (elHooks) {
                return elHooks;
            }
        }
    }

    if (selector) {
        return trySelector(selector);
    } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {
        var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;
        var $$testability = null;
        try {
            $$testability = $injector.get('$$testability');
        } catch (e) {}
        return {$injector: $injector, $$testability: $$testability};
    } else {
        return tryEl(document.body) ||
            trySelector('[ng-app]') || trySelector('[ng\\:app]') ||
            trySelector('[ng-controller]') || trySelector('[ng\\:controller]');
    }
};

var model = arguments[0];
var using = arguments[2] || document;
if (angular.getTestability) {
    return getNg1Hooks(arguments[1]).$$testability.
        findModels(using, model, true);
}
var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\:'];
for (var p = 0; p < prefixes.length; ++p) {
    var selector = '[' + prefixes[p] + 'model="' + model + '"]';
    var inputs = using.querySelectorAll(selector);
    if (inputs.length) {
        return inputs;
    }
})
Validate control (Angular Binding = 
function getNg1Hooks(selector, injectorPlease) {
    function tryEl(el) {
        try {
            if (!injectorPlease && angular.getTestability) {
                var $$testability = angular.getTestability(el);
                if ($$testability) {
                    return {$$testability: $$testability};
                }
            } else {
                var $injector = angular.element(el).injector();
                if ($injector) {
                    return {$injector: $injector};
                }
            }
        } catch(err) {} 
    }
    function trySelector(selector) {
        var els = document.querySelectorAll(selector);
        for (var i = 0; i < els.length; i++) {
            var elHooks = tryEl(els[i]);
            if (elHooks) {
                return elHooks;
            }
        }
    }

    if (selector) {
        return trySelector(selector);
    } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {
        var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;
        var $$testability = null;
        try {
            $$testability = $injector.get('$$testability');
        } catch (e) {}
        return {$injector: $injector, $$testability: $$testability};
    } else {
        return tryEl(document.body) ||
            trySelector('[ng-app]') || trySelector('[ng\\:app]') ||
            trySelector('[ng-controller]') || trySelector('[ng\\:controller]');
    }
};

var binding = arguments[0];
var exactMatch = arguments[1];
var using = arguments[3] || document;
if (angular.getTestability) {
    return getNg1Hooks(arguments[2]).$$testability.
        findBindings(using, binding, exactMatch);
}
var bindings = using.getElementsByClassName('ng-binding');
var matches = [];
for (var i = 0; i < bindings.length; ++i) {
    var dataBinding = angular.element(bindings[i]).data('$binding');
    if (dataBinding) {
        var bindingName = dataBinding.exp || dataBinding[0].exp || dataBinding;
        if (exactMatch) {
            var matcher = new RegExp('({|\\s|^|\\|)' +
                /* See http://stackoverflow.com/q/3561711 */
                binding.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&') +
                '(}|\\s|$|\\|)');
            if (matcher.test(bindingName)) {
                matches.push(bindings[i]);
            }
        } else {
            if (bindingName.indexOf(binding) != -1) {
                matches.push(bindings[i]);
            }
        }
    }
}
return matches;) inner text is 'Hello Julie!'
Start Test AngularTests.ShouldListTodos
Start Test BDDLoggingTests.PurchaseRocketWithLogs
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Validate control (Class containing woocommerce-message) inner text is 'Coupon code applied successfully.'
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Set '2' into control (Class containing input-text qty text)
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Validate control (XPath = //*[@class='order-total']//span) inner text is '114.00€'
Click control (Class containing checkout-button button alt wc-forward)
Validate control (InnerText containing Click here to login) href is 'http://demos.bellatrix.solutions/checkout/#'
Validate control (InnerText containing Click here to login) CSS class is 'showlogin'
Scroll to visible control (ID = order_comments)
Type 'Please send the rocket to my door step! And don't use the elevator, they don't like when it is not clean...' into control (ID = order_comments)
Type 'In' into control (ID = billing_first_name)
Type 'Deepthought' into control (ID = billing_last_name)
Type 'Automate The Planet Ltd.' into control (ID = billing_company)
Select 'Bulgaria' from control (ID = billing_country)
Validate control (ID = billing_address_1) placeholder is 'House number and street name'
Type 'bul. Yerusalim 5' into control (ID = billing_address_1)
Type 'bul. Yerusalim 6' into control (ID = billing_address_2)
Type 'Sofia' into control (ID = billing_city)
Select 'Sofia-Grad' from control (ID = billing_state)
Type '1000' into control (ID = billing_postcode)
Type '+00359894646464' into control (ID = billing_phone)
Type 'info@bellatrix.solutions' into control (ID = billing_email)
Check control (ID = createaccount)
Start Test BellatrixBrowserBehaviourTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Start Test BellatrixBrowserBehaviourTests.PromotionsPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Promotions)
Start Test BrowserServiceTests.ControlBrowser
Start Test BrowserServiceTests.GetCurrentUri
Start Test BrowserServiceTests.GetTabTitle
Start Test BrowserServiceTests.PrintCurrentPageHtml
Start Test CaptureHttpTrafficTests.BlockRequestsTest
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Start Test CaptureHttpTrafficTests.CaptureTrafficTests
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Start Test CaptureHttpTrafficTests.RedirectRequestsTest
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Start Test CommonServicesHooksTests.PurchaseRocketWithGloballyOverridenMethods
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Start Test CookiesServiceTests.AddNewCookie
Start Test CookiesServiceTests.DeleteAllCookies
Click control (InnerText containing Add to cart)
Start Test CookiesServiceTests.DeleteSpecificCookie
Click control (InnerText containing Add to cart)
Start Test CookiesServiceTests.GetAllCookies
Start Test CookiesServiceTests.GetSpecificCookie
Start Test CustomTestCaseExtensionTests.PurchaseRocketWithGloballyOverridenMethods
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Start Test DialogServiceTests.AcceptDialogAlert
Start Test DialogServiceTests.HappyBirthdayCouponDisplayed_When_ClickOnCouponButton
Start Test ElementActionHooksTests.PurchaseRocketWithGloballyOverridenMethods
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Validate control (Class containing woocommerce-message) inner text is 'Coupon code applied successfully.'
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Set '2' into control (Class containing input-text qty text)
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Validate control (XPath = //*[@class='order-total']//span) inner text is '114.00€'
Click control (Class containing checkout-button button alt wc-forward)
Start Test FullPageScreenshotsOnFailTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Start Test FullPageScreenshotsOnFailTests.PromotionsPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Promotions)
Start Test GridControlTests.AssertColumns
Validate control (Tag = input) value is '0'
Validate control (Tag = input) value is '0'
Start Test GridControlTests.AssertGridCells
Validate control (XPath = //*[@id='sampleGrid']//table[1]//tbody[1]//tr[2]//td[2]) inner text is 'Mary'
Validate control (XPath = //*[@id='sampleGrid']//table[1]//tbody[1]//tr[1]//td[2]) inner text is 'John'
Validate control (XPath = //*[@id='sampleGrid']//table[1]//tbody[1]//tr[2]//td[4]) inner text is 'mary@hotmail.com'
Validate control (XPath = //*[@id='sampleGrid']//table[1]//tbody[1]//tr[1]//td[5]) inner text is 'jdoe@corp.com'
Start Test GridControlTests.AssertHeaders
Start Test GridControlTests.AssertObjectsData
Scroll to visible TestGrid
Scroll to visible TestGrid
Start Test GridControlTests.AssertRows
Validate control (XPath = .//input[@type='button']) is visible
Validate control (XPath = .//input[@type='button']) is visible
Validate control (XPath = .//input[@type='button']) is visible
Start Test GridControlTests.AssertSpecificCell
Validate control (Tag = input) value is '0'
Start Test GridControlTests.AssertSpecificRow
Validate control (XPath = .//table[1]//tbody[1]//tr[1]) inner HTML contains '</td>'
Validate control (Tag = input) value is '0'
Validate control (XPath = //*[@id='sampleGrid']//table[1]//tbody[1]//tr[1]//td[2]) inner text is 'John'
Validate control (Tag = input) value is '0'
Start Test InteractionsServiceTests.KeyUp
Start Test JavaScriptServiceTests.FillUpAllFields
Type 'Gorgeous' into control (ID = password)
Start Test LayoutTestingTests.TestPageLayout
Assert control (Name ending with orderby) is above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is 41 px above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is >40 px above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is >=41 px above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is <50 px above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is <=43 px above of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is >40 px near top of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is >=41 px near top of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is <50 px near top of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is <=43 px near top of control (href = /proton-rocket/).
Assert control (Name ending with orderby) is 40 px above of control (href = /proton-rocket/). (10% tolerance)
Assert control (Name ending with orderby) is 30-50 px above of control (href = /proton-rocket/).
Assert control (href = /saturn-v/) is near bottom of control (Name ending with orderby).
Assert control (Name ending with orderby) is near right of control (href = /saturn-v/).
Assert control (Name ending with orderby) is near top of control (href = /saturn-v/).
Assert control (href = /saturn-v/) is near left of control (Name ending with orderby).
Assert control (Class containing star-rating) is left inside of control (href = /saturn-v/).
Assert control (Class containing star-rating) is right inside of control (href = /saturn-v/).
Assert control (Class containing star-rating) is top inside of control (href = /saturn-v/).
Assert control (Class containing star-rating) is bottom inside of control (href = /saturn-v/).
Assert control (Class containing star-rating) height is <100 px.
Assert control (Class containing star-rating) width is 50-70 px.
Start Test LocateAndWaitElementsTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Click control (LinkText = Promotions)
Start Test LocateElementsTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Start Test LocateElementsTests.CheckAllAddToCartButtons
Start Test LocateElementsTests.OpenSalesPage_When_LocatedSaleButtonInsideProductImage
Start Test LocateElementsTests.PromotionsPageOpened_When_PromotionsButtonClicked
Start Test LoggingTests.AddCustomMessagesToLog
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Before adding Falcon 9 rocket to cart.
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Start Test MeasureTestExecutionTests.PromotionsPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Promotions)
Start Test NavigateToPagesTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Start Test NavigateToPagesTests.PromotionsPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Promotions)
Start Test NavigateToPagesTests.TestFileOpened_When_NavigateToLocalPage
Start Test NormalAssertions.AssertCartPageFields
Start Test PageObjectsTests.PurchaseRocketWithPageObjects
Select 'Sort by popularity' from SortDropDown
Click control (data-product_id = 28)
Validate ViewCartButton is visible
Click ViewCartButton
Type 'happybirthday' into CouponCode
Start Test PageObjectsTests.PurchaseRocketWithoutPageObjects
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Start Test SimpleControlsTests.PurchaseRocket
Select 'Sort by price: low to high' from control (Name ending with orderby)
Hover control (InnerText containing Read more)
Focus control (data-product_id = 28)
Click control (data-product_id = 28)
Click control (Class containing added_to_cart wc-forward)
Type 'happybirthday' into control (ID = coupon_code)
Validate control (Class containing woocommerce-message) inner text is 'Coupon code applied successfully.'
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Set '2' into control (Class containing input-text qty text)
Timed out waiting for open connections to be closed. Wait time: 30 sec.
Validate control (XPath = //*[@class='order-total']//span) inner text is '114.00€'
Click control (Class containing checkout-button button alt wc-forward)
Validate control (InnerText containing Click here to login) href is 'http://demos.bellatrix.solutions/checkout/#'
Validate control (InnerText containing Click here to login) CSS class is 'showlogin'
Scroll to visible control (ID = order_comments)
Type 'Please send the rocket to my door step! And don't use the elevator, they don't like when it is not clean...' into control (ID = order_comments)
Type 'In' into control (ID = billing_first_name)
Type 'Deepthought' into control (ID = billing_last_name)
Type 'Automate The Planet Ltd.' into control (ID = billing_company)
Select 'Bulgaria' from control (ID = billing_country)
Type 'bul. Yerusalim 5' into control (ID = billing_address_1)
Type 'bul. Yerusalim 6' into control (ID = billing_address_2)
Type 'Sofia' into control (ID = billing_city)
Select 'Sofia-Grad' from control (ID = billing_state)
Type '1000' into control (ID = billing_postcode)
Type '+00359894646464' into control (ID = billing_phone)
Type 'info@bellatrix.solutions' into control (ID = billing_email)
Check control (ID = createaccount)
Start Test StyleTestingTests.TestStyles
Start Test TableControlTests.AssertCells
Validate control (XPath = ./td) inner text is 'Frank'
Validate control (XPath = ./td) inner text is 'Jason'
Validate control (XPath = ./td) inner text is 'fbach@yahoo.com'
Validate control (XPath = ./td) inner text is 'John'
Start Test TableControlTests.AssertColumns
Validate control (XPath = ./td) inner text is 'John'
Validate control (XPath = ./td) inner text is 'John'
Start Test TableControlTests.AssertHeaders
Start Test TableControlTests.AssertMiscData
Start Test TableControlTests.AssertSpecificCell
Validate control (XPath = ./td) inner text is 'Smith'
Start Test TableControlTests.AssertSpecificRow
Validate control (XPath = ./tr[descendant::td]|./tbody/tr[descendant::td]) inner HTML contains '</td>'
Validate control (XPath = ./td) inner text is 'Smith'
Validate control (XPath = ./td) inner text is 'jsmith@gmail.com'
Validate control (XPath = ./td) inner text is 'Smith'
Select 'Sort by price: low to high' from control (XPath = //*[@id='main']/div[1]/form/select)
Start Test TestWorkflowHooksTests.SortDropDownIsAboveOfProtonRocketAnchor
Assert control (XPath = //*[@id='main']/div[1]/form/select) is above of control (XPath = //*[@id='main']/div[2]/ul/li[1]/a[1]).
Start Test TestWorkflowHooksTests.SortDropDownIsAboveOfProtonRocketAnchor_41px
Assert control (XPath = //*[@id='main']/div[1]/form/select) is 41 px above of control (XPath = //*[@id='main']/div[2]/ul/li[1]/a[1]).
Start Test TestWorkflowHooksTests.SortDropDownIsAboveOfProtonRocketAnchor_GreaterThan40px
Assert control (XPath = //*[@id='main']/div[1]/form/select) is >40 px above of control (XPath = //*[@id='main']/div[2]/ul/li[1]/a[1]).
Start Test TestWorkflowHooksTests.SortDropDownIsAboveOfProtonRocketAnchor_GreaterThanOrEqual41px
Assert control (XPath = //*[@id='main']/div[1]/form/select) is >=41 px above of control (XPath = //*[@id='main']/div[2]/ul/li[1]/a[1]).
Start Test TestWorkflowHooksTests.SortDropDownIsNearTopOfProtonRocketAnchor_GreaterThan40px
Assert control (XPath = //*[@id='main']/div[1]/form/select) is >40 px near top of control (XPath = //*[@id='main']/div[2]/ul/li[1]/a[1]).
Start Test ValidateAssertions.AssertValidateCartPageFields
Validate control (ID = coupon_code) placeholder is 'Coupon code'
Validate control (Value containing Apply coupon) is visible
Validate control (Class containing woocommerce-message) is NOT visible
Validate control (Value containing Update cart) is disabled
Validate control (XPath = //*[@class='order-total']//span) inner text is '120.00€'
Validate control (XPath = //*[@class='order-total']//span) inner text is '120.00€'
Validate control (Value containing Update cart) is disabled
Validate control (Class containing woocommerce-message) is NOT visible
Start Test VideoRecordingTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
Start Test VideoRecordingTests.PromotionsPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Promotions)
Start Test WaitElementsTests.BlogPageOpened_When_PromotionsButtonClicked
Click control (LinkText = Blog)
